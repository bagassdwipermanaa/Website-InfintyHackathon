version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: blockrights-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-blockrights123}
      MYSQL_DATABASE: ${DB_NAME:-blockrights_db}
      MYSQL_USER: ${DB_USER:-blockrights}
      MYSQL_PASSWORD: ${DB_PASSWORD:-blockrights123}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_dev:/var/lib/mysql
      - ./backend/server/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - blockrights-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: blockrights-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - blockrights-network

  # Backend Development
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: blockrights-backend-dev
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_USER=${DB_USER:-blockrights}
      - DB_PASSWORD=${DB_PASSWORD:-blockrights123}
      - DB_NAME=${DB_NAME:-blockrights_db}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-dev_jwt_secret}
      - ETHEREUM_RPC_URL=${ETHEREUM_RPC_URL}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    depends_on:
      - mysql
      - redis
    networks:
      - blockrights-network
    command: npm run dev

  # Frontend Development
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: blockrights-frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:5000/api
      - NEXT_PUBLIC_FRONTEND_URL=http://localhost:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - blockrights-network
    command: npm run dev

volumes:
  mysql_data_dev:
  redis_data_dev:

networks:
  blockrights-network:
    driver: bridge
